[gd_resource type="ShaderMaterial" load_steps=26 format=2]

[sub_resource type="OpenSimplexNoise" id=1]

[sub_resource type="NoiseTexture" id=2]
width = 2048
height = 2048
seamless = true
noise = SubResource( 1 )

[sub_resource type="VisualShaderNodeTexture" id=3]
source = 5
texture = SubResource( 2 )

[sub_resource type="VisualShaderNodeVectorOp" id=4]

[sub_resource type="VisualShaderNodeTexture" id=5]
source = 5
texture = SubResource( 2 )

[sub_resource type="VisualShaderNodeVectorOp" id=6]

[sub_resource type="VisualShaderNodeTexture" id=7]
source = 5
texture = SubResource( 2 )

[sub_resource type="VisualShaderNodeVectorOp" id=8]
operator = 2

[sub_resource type="VisualShaderNodeVectorInterp" id=9]
default_input_values = [ 0, Vector3( 0.5, 0.5, 0.5 ), 1, Vector3( 1, 1, 1 ), 2, Vector3( 0.5, 0.5, 0.5 ) ]

[sub_resource type="VisualShaderNodeTextureUniform" id=10]
output_port_for_preview = 0
uniform_name = "NoiseTexture"
texture_type = 1

[sub_resource type="VisualShaderNodeTexture" id=11]
source = 5
texture = SubResource( 2 )

[sub_resource type="VisualShaderNodeTextureUniform" id=12]
output_port_for_preview = 0
uniform_name = "ColorizerGradient"

[sub_resource type="VisualShaderNodeScalarUniform" id=13]
uniform_name = "Contrast"

[sub_resource type="VisualShaderNodeScalarUniform" id=14]
uniform_name = "TimeScale"

[sub_resource type="VisualShaderNodeInput" id=15]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=16]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.5, 0.5, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=17]

[sub_resource type="VisualShaderNodeInput" id=18]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=19]
default_input_values = [ 0, 0.0, 1, 100.0 ]
operator = 3

[sub_resource type="VisualShaderNodeVectorOp" id=20]
operator = 1

[sub_resource type="VisualShader" id=21]
code = "shader_type canvas_item;
uniform sampler2D NoiseTexture : hint_albedo;
uniform float TimeScale;
uniform float Contrast;
uniform sampler2D ColorizerGradient;



void vertex() {
// Output:0

}

void fragment() {
// TextureUniform:19
	vec3 n_out19p0;
	float n_out19p1;
	{
		vec4 n_tex_read = texture(NoiseTexture, UV.xy);
		n_out19p0 = n_tex_read.rgb;
		n_out19p1 = n_tex_read.a;
	}

// Texture:13
	vec3 n_out13p0;
	float n_out13p1;
	{
		vec4 NoiseTexture_tex_read = texture(NoiseTexture, UV.xy);
		n_out13p0 = NoiseTexture_tex_read.rgb;
		n_out13p1 = NoiseTexture_tex_read.a;
	}

// Input:3
	vec3 n_out3p0 = vec3(UV, 0.0);

// VectorOp:4
	vec3 n_in4p1 = vec3(0.50000, 0.50000, 0.00000);
	vec3 n_out4p0 = n_out3p0 * n_in4p1;

// Input:7
	float n_out7p0 = TIME;

// ScalarUniform:22
	float n_out22p0 = TimeScale;

// ScalarOp:8
	float n_out8p0 = n_out7p0 / n_out22p0;

// VectorOp:6
	vec3 n_out6p0 = n_out4p0 + vec3(n_out8p0);

// Texture:2
	vec3 n_out2p0;
	float n_out2p1;
	{
		vec4 NoiseTexture_tex_read = texture(NoiseTexture, n_out6p0.xy);
		n_out2p0 = NoiseTexture_tex_read.rgb;
		n_out2p1 = NoiseTexture_tex_read.a;
	}

// VectorOp:9
	vec3 n_out9p0 = n_out4p0 - vec3(n_out8p0);

// Texture:10
	vec3 n_out10p0;
	float n_out10p1;
	{
		vec4 NoiseTexture_tex_read = texture(NoiseTexture, n_out9p0.xy);
		n_out10p0 = NoiseTexture_tex_read.rgb;
		n_out10p1 = NoiseTexture_tex_read.a;
	}

// VectorOp:11
	vec3 n_out11p0 = n_out2p0 + n_out10p0;

// VectorOp:14
	vec3 n_out14p0 = n_out13p0 + n_out11p0;

// Texture:15
	vec3 n_out15p0;
	float n_out15p1;
	{
		vec4 NoiseTexture_tex_read = texture(NoiseTexture, n_out14p0.xy);
		n_out15p0 = NoiseTexture_tex_read.rgb;
		n_out15p1 = NoiseTexture_tex_read.a;
	}

// VectorOp:16
	vec3 n_out16p0 = n_out15p0 * n_out11p0;

// ScalarUniform:21
	float n_out21p0 = Contrast;

// VectorMix:17
	vec3 n_in17p0 = vec3(0.50000, 0.50000, 0.50000);
	vec3 n_out17p0 = mix(n_in17p0, n_out16p0, vec3(n_out21p0));

// TextureUniform:20
	vec3 n_out20p0;
	float n_out20p1;
	{
		vec4 n_tex_read = texture(ColorizerGradient, n_out17p0.xy);
		n_out20p0 = n_tex_read.rgb;
		n_out20p1 = n_tex_read.a;
	}

// Output:0
	COLOR.rgb = n_out20p0;

}

void light() {
// Output:0

}
"
custom_defines = ""
graph_offset = Vector2( 644.02, -116.518 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 2840, 200 )
nodes/fragment/2/node = SubResource( 11 )
nodes/fragment/2/position = Vector2( -600, 60 )
nodes/fragment/3/node = SubResource( 15 )
nodes/fragment/3/position = Vector2( -2200, -140 )
nodes/fragment/4/node = SubResource( 16 )
nodes/fragment/4/position = Vector2( -1780, -40 )
nodes/fragment/6/node = SubResource( 17 )
nodes/fragment/6/position = Vector2( -1140, 200 )
nodes/fragment/7/node = SubResource( 18 )
nodes/fragment/7/position = Vector2( -2200, 20 )
nodes/fragment/8/node = SubResource( 19 )
nodes/fragment/8/position = Vector2( -1780, 200 )
nodes/fragment/9/node = SubResource( 20 )
nodes/fragment/9/position = Vector2( -1140, 440 )
nodes/fragment/10/node = SubResource( 3 )
nodes/fragment/10/position = Vector2( -600, 320 )
nodes/fragment/11/node = SubResource( 4 )
nodes/fragment/11/position = Vector2( -140, 180 )
nodes/fragment/13/node = SubResource( 5 )
nodes/fragment/13/position = Vector2( -600, -200 )
nodes/fragment/14/node = SubResource( 6 )
nodes/fragment/14/position = Vector2( 300, 40 )
nodes/fragment/15/node = SubResource( 7 )
nodes/fragment/15/position = Vector2( 720, 40 )
nodes/fragment/16/node = SubResource( 8 )
nodes/fragment/16/position = Vector2( 1160, 140 )
nodes/fragment/17/node = SubResource( 9 )
nodes/fragment/17/position = Vector2( 1560, 140 )
nodes/fragment/19/node = SubResource( 10 )
nodes/fragment/19/position = Vector2( -1220, 660 )
nodes/fragment/20/node = SubResource( 12 )
nodes/fragment/20/position = Vector2( 2240, -20 )
nodes/fragment/21/node = SubResource( 13 )
nodes/fragment/21/position = Vector2( 1160, 360 )
nodes/fragment/22/node = SubResource( 14 )
nodes/fragment/22/position = Vector2( -2200, 300 )
nodes/fragment/connections = PoolIntArray( 6, 0, 2, 0, 9, 0, 10, 0, 2, 0, 11, 0, 10, 0, 11, 1, 13, 0, 14, 0, 11, 0, 14, 1, 8, 0, 9, 1, 8, 0, 6, 1, 14, 0, 15, 0, 4, 0, 6, 0, 4, 0, 9, 0, 16, 0, 17, 1, 19, 2, 10, 2, 19, 2, 2, 2, 19, 2, 13, 2, 19, 2, 15, 2, 17, 0, 20, 0, 11, 0, 16, 1, 15, 0, 16, 0, 21, 0, 17, 2, 22, 0, 8, 1, 3, 0, 4, 0, 7, 0, 8, 0, 20, 0, 0, 0 )

[sub_resource type="Gradient" id=22]
offsets = PoolRealArray( 0.209622, 0.498141, 0.836431 )
colors = PoolColorArray( 0.997509, 1, 0.681159, 1, 0.998782, 0.644589, 0.332983, 1, 1, 0.304688, 0, 1 )

[sub_resource type="GradientTexture" id=23]
gradient = SubResource( 22 )

[sub_resource type="OpenSimplexNoise" id=24]
octaves = 8
period = 180.0

[sub_resource type="NoiseTexture" id=25]
width = 2048
height = 2048
seamless = true
noise = SubResource( 24 )

[resource]
shader = SubResource( 21 )
shader_param/TimeScale = 100.0
shader_param/Contrast = 1.5
shader_param/NoiseTexture = SubResource( 25 )
shader_param/ColorizerGradient = SubResource( 23 )
